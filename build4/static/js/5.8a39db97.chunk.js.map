{"version":3,"sources":["views/Home/components/TotalClaimedSMN.tsx","views/Home/components/TotalNodes.tsx","views/Home/components/SMNprice.tsx","views/Home/components/ToggleButtonAC.tsx","views/Home/components/AutoCompound.tsx","views/Home/components/MilliTime.tsx","views/Home/components/IncomeCard.tsx","views/Home/components/PriceChart.tsx","views/Home/components/NodesList.tsx","views/Home/components/NodesListCard.tsx","views/Home/components/AvailReward.tsx","views/Home/components/CreateNewNode.tsx","views/Home/Home.tsx"],"names":["contractABI","tempABI","abi","StyledCard","styled","Card","RowBlock","div","RowBlockBetween","StyledImg","img","Label","theme","colors","textSubtle","props","size","PlusLabel","color","StyledCardBody","CardBody","TotalClaimedSMN","title","val2","val1","account","useState","claimedSMN","setTokenPrice","useEffect","getTotalClaimedSMN","a","window","ethereum","provider","ethers","providers","Web3Provider","signer","getSigner","contract","Contract","console","log","getAllNodesRewards","val","toString","scale","mb","src","alt","TotalNodes","totalNodes","setTotalNodes","totalNodesCreated","SMNprice","PurpleSwitch","withStyles","switchBase","orange","backgroundColor","checked","track","Switch","ToggleButtonAC","React","isChecked","setCheck","onClick","onChange","name","ToogleCard","status","img1","img2","isOn","setIsOn","MilliTime","countDown","setCountDown","interval","setInterval","clearInterval","parseFloat","toFixed","p","labelSize","IncomeCard","nodeNum","smnNum","CommingSoon","PriceChart","format","Date","px","height","columns","id","label","minWidth","align","NodesList","page","setPage","rowsPerPage","setRowsPerPage","rows","Paper","style","width","overflow","background","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","fontSize","TableBody","slice","row","index","hover","role","tabIndex","value","date","TablePagination","rowsPerPageOptions","component","count","length","onPageChange","event","newPage","onRowsPerPageChange","target","display","NodesListCard","StyledButton","button","AvailReward","availReward","StyledInput","input","CreateNewNode","myAccount","nodeName","setNodeName","createNewNodeFunc","createNode","placeholder","e","Cards","BaseLayout","mediaQueries","sm","md","lg","CustomCards","BigCards","Home","useWeb3React","Page","AutoCompound"],"mappings":"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","file":"static/js/5.8a39db97.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport { Card, CardBody, Heading } from 'uikit'\r\nimport { ethers } from 'ethers';\r\n\r\n// import { Web3ReactProvider } from '@web3-react/core';\r\nimport tempABI from '../../../contracts/smartnodes.json';\r\n\r\nconst contractABI = tempABI.abi;\r\nconst contractAddress = '0xa5CD786fDA5802BeD0138E3e591eEB52712DD9Ee';\r\n\r\nconst StyledCard = styled(Card)`\r\n  // min-height: 60px;\r\n`\r\n\r\nconst RowBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-end;\r\n  gap: 8px;\r\n`\r\n\r\nconst RowBlockBetween = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`\r\nconst StyledImg = styled.img`\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 10px;\r\n  margin-top: 20px;\r\n  margin-right: 20px;\r\n`\r\nconst Label = styled.div<{ size: string }>`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: ${props => props.size};\r\n`\r\nconst PlusLabel = styled.div<{ size: string, color: any }>`\r\n  color: ${props => props.color >= 0 ? '#55f6bb' : '#ee4f9f'};\r\n  font-size: ${props => props.size};\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\n\r\nconst TotalClaimedSMN = ({ title, val1, val2, img, account }) => {\r\n  const [claimedSMN, setTokenPrice] = useState('Connect Wallet');\r\n\r\n  useEffect(() => {\r\n    const getTotalClaimedSMN = async () => {\r\n      try {\r\n        const { ethereum } = window;\r\n\r\n        if (ethereum) {\r\n          const provider = new ethers.providers.Web3Provider(ethereum);\r\n          const signer = provider.getSigner();\r\n          const contract = new ethers.Contract(contractAddress, contractABI, signer);\r\n\r\n          console.log('TotalClaimedSMN--------------------------------');\r\n          const val = await contract.getAllNodesRewards(account);\r\n          // const val=20;\r\n          console.log('totalClaimedSMN****************', val);\r\n          setTokenPrice(val.toString());\r\n          console.log(`myaccount: ${account}`)\r\n          console.log(`TotalClaimedSMN: ${claimedSMN}`);\r\n        }\r\n        else {\r\n          console.log(\"Connection Error\");\r\n        }\r\n      } catch (err) {\r\n        if(account)\r\n          setTokenPrice('0');\r\n        console.log(err);\r\n      }\r\n    }\r\n\r\n    getTotalClaimedSMN();\r\n  });\r\n\r\n  return (\r\n    <StyledCard>\r\n      <RowBlockBetween>\r\n        <StyledCardBody>\r\n          <Heading scale=\"sm\" mb=\"8px\">\r\n            {title}\r\n          </Heading>\r\n          <RowBlock>\r\n            <Label size='20px'>{claimedSMN}</Label>\r\n            {val2 != null ?\r\n              <PlusLabel color={val2} size='16px'>{val2 >= 0 ? `+${val2}` : val2}%</PlusLabel> : ''\r\n            }\r\n          </RowBlock>\r\n        </StyledCardBody>\r\n        <StyledImg src={img} alt='status_logo' />\r\n      </RowBlockBetween>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\n\r\nexport default TotalClaimedSMN","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport { Card, CardBody, Text, Heading } from 'uikit'\r\nimport { ethers } from 'ethers';\r\n\r\nimport tempABI from '../../../contracts/smartnodes.json';\r\n// import { Web3ReactProvider } from '@web3-react/core';\r\n\r\nconst contractABI = tempABI.abi;\r\nconst contractAddress = '0xa5CD786fDA5802BeD0138E3e591eEB52712DD9Ee';\r\n\r\nconst StyledCard = styled(Card)`\r\n  // min-height: 60px;\r\n`\r\n\r\nconst RowBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-end;\r\n  gap: 8px;\r\n`\r\n\r\nconst RowBlockBetween = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`\r\nconst StyledImg = styled.img`\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 10px;\r\n  margin-top: 20px;\r\n  margin-right: 20px;\r\n`\r\nconst Label = styled.div<{ size: string }>`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: ${props => props.size};\r\n`\r\nconst PlusLabel = styled.div<{ size: string, color: any }>`\r\n  color: ${props => props.color >= 0 ? '#55f6bb' : '#ee4f9f'};\r\n  font-size: ${props => props.size};\r\n`\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\nconst StyledCardBody = styled(CardBody)`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TotalNodes = ({ title, val1, val2, img }) => {\r\n  const [totalNodes, setTotalNodes] = useState('0');\r\n\r\n  useEffect(() => {\r\n    const getTotalClaimedSMN = async () => {\r\n      try {\r\n        const { ethereum } = window;\r\n\r\n        if (ethereum) {\r\n          const provider = new ethers.providers.Web3Provider(ethereum);\r\n          const signer = provider.getSigner();\r\n          const contract = new ethers.Contract(contractAddress, contractABI, signer);\r\n\r\n          console.log(`TotalNodesCreated----------------------------------`);\r\n          const val = await contract.totalNodesCreated();\r\n          // const val = '10';\r\n          // console.log(val);\r\n          setTotalNodes(val.toString());\r\n          console.log(`TotalNodesCreated==: ${totalNodes}`);\r\n        }\r\n        else {\r\n          console.log(\"Connection Error\");\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n\r\n    getTotalClaimedSMN();\r\n  });\r\n  return (\r\n    <StyledCard>\r\n      <RowBlockBetween>\r\n        <StyledCardBody>\r\n          <Heading scale=\"sm\" mb=\"8px\">\r\n            {title}\r\n          </Heading>\r\n          <RowBlock>\r\n            <Label size='20px'>{totalNodes}</Label>\r\n            {/* {val2 != null ?\r\n              <PlusLabel color={val2} size='16px'>{val2 >= 0 ? `+${val2}` : val2}%</PlusLabel> : ''\r\n            } */}\r\n          </RowBlock>\r\n        </StyledCardBody>\r\n        {/* <StyledCardBody> */}\r\n        <StyledImg src={img} alt='status_logo' />\r\n        {/* </StyledCardBody> */}\r\n      </RowBlockBetween>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default TotalNodes","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Text, Heading } from 'uikit'\r\n\r\n\r\nconst StyledCard = styled(Card)`\r\n  // min-height: 60px;\r\n`\r\n\r\nconst RowBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-end;\r\n  gap: 8px;\r\n`\r\n\r\nconst RowBlockBetween = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`\r\nconst StyledImg = styled.img`\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 10px;\r\n  margin-top: 20px;\r\n  margin-right: 20px;\r\n`\r\nconst Label = styled.div<{ size: string }>`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: ${props => props.size};\r\n`\r\nconst PlusLabel = styled.div<{ size: string, color: any }>`\r\n  color: ${props => props.color >= 0 ? '#55f6bb' : '#ee4f9f'};\r\n  font-size: ${props => props.size};\r\n`\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\nconst StyledCardBody = styled(CardBody)`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\n\r\nconst SMNprice = ({ title, val1, val2, img }) => {\r\n\r\n  return (\r\n    <StyledCard>\r\n      <RowBlockBetween>\r\n        <StyledCardBody>\r\n          <Heading scale=\"sm\" mb=\"8px\">\r\n            {title}\r\n          </Heading>\r\n          <RowBlock>\r\n            <Label size='20px'>_</Label>\r\n            {/* <Label size='20px'>{val1}</Label>\r\n            {val2 != null ?\r\n              <PlusLabel color={val2} size='16px'>{val2 >= 0 ? `+${val2}` : val2}%</PlusLabel> : ''\r\n            } */}\r\n          </RowBlock>\r\n        </StyledCardBody>\r\n        {/* <StyledCardBody> */}\r\n        <StyledImg src={img} alt='status_logo' />\r\n        {/* </StyledCardBody> */}\r\n      </RowBlockBetween>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default SMNprice","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { orange } from '@material-ui/core/colors';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst PurpleSwitch = withStyles({\r\n  switchBase: {\r\n    color: orange[300],\r\n    '&$checked': {\r\n      color: orange[500],\r\n    },\r\n    '&$checked + $track': {\r\n      backgroundColor: orange[500],\r\n    },\r\n  },\r\n  checked: {},\r\n  track: {},\r\n})(Switch);\r\n\r\nexport default function ToggleButtonAC(props) {\r\n  const [isChecked, setCheck] = React.useState(false);\r\n  const { onClick } = props;\r\n\r\n  const handleChange = () => {\r\n    setCheck(!isChecked);\r\n    onClick();\r\n  };\r\n\r\n  return (\r\n    <PurpleSwitch checked={isChecked} onChange={handleChange} name=\"toggleSwitch\" />\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Text, Heading } from 'uikit'\r\nimport ToggleButtonAC from './ToggleButtonAC'\r\n\r\nconst StyledCard = styled(Card)`\r\n  // min-height: 60px;\r\n`\r\n\r\nconst RowBlockBetween = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`\r\nconst StyledImg = styled.img`\r\n  width: 60px;\r\n  height: 60px;\r\n  border-radius: 10px;\r\n  margin-top: 20px;\r\n  margin-right: 20px;\r\n`\r\nconst StyledCardBody = styled(CardBody)`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst ToogleCard = ({ title, status, img1, img2 }) => {\r\n  const [isOn, setIsOn] = useState(status)\r\n\r\n  return (\r\n    <StyledCard>\r\n      <RowBlockBetween>\r\n        <StyledCardBody>\r\n          <Heading scale=\"sm\" mb=\"8px\">\r\n            {title}\r\n          </Heading>\r\n\r\n          <ToggleButtonAC onClick={() => setIsOn(!isOn)} />\r\n\r\n        </StyledCardBody>\r\n        <StyledImg src={isOn ? img2 : img1} alt='status_logo' />\r\n      </RowBlockBetween>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default ToogleCard\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst MilliTime = () => {\r\n    const [countDown, setCountDown] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setCountDown(countDown + 0.00128);\r\n        }, 30);\r\n\r\n        return () => clearInterval(interval);\r\n    });\r\n\r\n    return (\r\n        <div>${parseFloat(countDown.toString()).toFixed(4)}</div>\r\n    );\r\n};\r\n\r\nexport default MilliTime;\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\n// import { useSelector } from 'react-redux'\r\n// import axios from 'axios'\r\n// import { Duration, format, fromUnixTime } from 'date-fns'\r\n// import { UnsupportedChainIdError, useWeb3React, Web3ReactProvider } from '@web3-react/core'\r\n// import useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { Card, CardBody, Text, Heading } from 'uikit'\r\n// import ConnectWalletButton from 'components/ConnectWalletButton'\r\n// import CardValue from 'components/CardValue'\r\n// import { useFsvBalance, useFsvBNBBalance, useEthBalance, useBNBBalance } from 'state/user/hooks'\r\n// import { useTokenPriceData } from 'hooks/useInfo'\r\n// import contracts from 'config/contracts'\r\n// import { formatAmount } from 'utils/formatInforNumbers'\r\n// import CardBusdValue from 'components/CardBusdValue'\r\nimport MilliTime from './MilliTime'\r\nimport { State } from '../../../state/types'\r\n\r\nconst StyledCard = styled(Card)`\r\n  height: 200px;\r\n`\r\n\r\n// const RowBlock = styled.div`\r\n//   display: flex;\r\n//   flex-direction: row;\r\n// `\r\n\r\nconst RowBlockBetween = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst Label = styled.div<{ labelSize: string }>`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: ${(p) => p.labelSize};\r\n  margin-bottom: 24px;\r\n  margin-top: 24px;\r\n`\r\nconst StyledCardBody = styled(CardBody)`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\nconst StyledImg = styled.img`\r\n  width: 160px;\r\n  height: 160px;\r\n  border-radius: 10px;\r\n  // margin-top: 20px;\r\n  margin-left: 20px;\r\n`\r\n\r\nconst IncomeCard = ({ img }) => {\r\n  const [nodeNum, setNodeNum] = useState(0);\r\n  const [smnNum, setSmnNum] = useState(0);\r\n  const [smnPrice, setSmnPrice] = useState(0);\r\n  console.log(\"asdfsadf\");\r\n\r\n  return (\r\n    <StyledCard>\r\n      <RowBlockBetween>\r\n        <StyledImg src={img} alt='status_logo' />\r\n        <StyledCardBody>\r\n          <Heading scale=\"sm\">\r\n            Your Monthly Passive Income\r\n          </Heading>\r\n          <Label labelSize='42px'>\r\n            <MilliTime />\r\n          </Label>\r\n          <Heading scale=\"sm\">\r\n            Based on {nodeNum} {nodeNum > 1 ? 'nodes' : 'node'} & {smnNum} SMN\r\n          </Heading>\r\n        </StyledCardBody>\r\n      </RowBlockBetween>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default IncomeCard","import React, { useState, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux'\r\nimport { Duration, format, fromUnixTime } from 'date-fns'\r\nimport { Card, CardBody, Text, Box, Heading, Flex, Skeleton } from 'uikit'\r\n// import { useTokenPriceData } from 'hooks/useInfo'\r\nimport contracts from 'config/contracts'\r\n// import { formatAmount } from 'utils/formatInforNumbers'\r\n// import CandleChart from './CandelChart'\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 300px;\r\n`\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n`\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\nconst StyledCardBody = styled(CardBody)`\r\n  // height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between\r\n`\r\nconst CommingSoon = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\nfont-size: 28px;\r\ncolor: #514e4e;\r\n// font-weight: bold;\r\nalign-items: center;\r\nheight: 100%;\r\n`\r\nconst DEFAULT_TIME_WINDOW: Duration = { weeks: 1 }\r\nconst ONE_HOUR_SECONDS = 3600\r\n\r\n\r\nconst PriceChart = () => {\r\n  const [hoverValue, setHoverValue] = useState<number | undefined>()\r\n  const [hoverDate, setHoverDate] = useState<string | undefined>()\r\n\r\n  const address: string = contracts.fsvETH; // Replace it with FSV token address\r\n  // const priceData = useTokenPriceData(address.toLowerCase(), ONE_HOUR_SECONDS, DEFAULT_TIME_WINDOW)\r\n\r\n  const currentDate = format(new Date(), 'MMM d, yyyy')\r\n\r\n  // const getLatestValueDisplay = () => {\r\n  // let valueToDisplay = null\r\n  // if (priceData) valueToDisplay = formatAmount(priceData[priceData.length - 1].open)\r\n  // if (hoverValue) {\r\n  //   valueToDisplay = formatAmount(hoverValue)\r\n  // }\r\n\r\n  // return valueToDisplay ? (\r\n  // <Text fontSize=\"24px\" bold>\r\n  // {/* ${valueToDisplay} */}\r\n  //     {/* </Text>\r\n  //   ) : (\r\n  //     <Skeleton height=\"36px\" width=\"128px\" />\r\n  //   )\r\n  // } */}\r\n\r\n  return (\r\n    <StyledCard>\r\n      <StyledCardBody>\r\n        <div>\r\n          <Heading scale='lg' mb='4px'>Price Chart</Heading>\r\n          <Label>SMN/USD</Label>\r\n        </div>\r\n\r\n        {/* <Flex flexDirection=\"column\" px=\"24px\">\r\n          $75.03\r\n          <Text small color=\"textSubtle\">\r\n            {hoverDate || currentDate}\r\n          </Text>\r\n        </Flex> */}\r\n      </StyledCardBody>\r\n      <Box px=\"24px\" height='250px'>\r\n        <CommingSoon>\r\n          Comming Soon\r\n        </CommingSoon>\r\n        {/* <CandleChart data={priceData} setValue={setHoverValue} setLabel={setHoverDate} /> */}\r\n      </Box>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default PriceChart","import React, { useState, useEffect } from 'react'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n// import { withStyles } from \"@mui/styles\";\r\n// import styled from 'styled-components'\r\n\r\ninterface Column {\r\n  id: 'nodes' | 'date' | 'reward';\r\n  label: string;\r\n  minWidth?: number;\r\n  align?: 'right';\r\n  format?: (value: number) => string;\r\n}\r\n\r\nconst columns: readonly Column[] = [\r\n  { id: 'nodes', label: 'Standalone Nodes', minWidth: 220 },\r\n  { id: 'date', label: 'Creation Date', minWidth: 100 },\r\n  { id: 'reward', label: 'Rewards', minWidth: 100, align: 'right' },\r\n];\r\n\r\ninterface Data {\r\n  nodes: string;\r\n  date: string;\r\n  reward: string;\r\n}\r\n\r\nfunction createData(\r\n  nodes: string,\r\n  date: string,\r\n  reward: string,\r\n): Data {\r\n  return { nodes, date, reward };\r\n}\r\n\r\nconst NodesList = (account) => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  // const [nList, setnList] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  // const handNList = () => {\r\n  const rows = [];\r\n  // for (let i = 0; i < 3; i++) {\r\n  //   rowsTemp.push(createData('1', `${i}`, '1'));\r\n  // }\r\n  // setnList(rowsTemp);\r\n  // }\r\n\r\n  // handNList();\r\n  // })\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  // const classes = useStyles();\r\n  return (\r\n    <Paper style={{ width: '100%', overflow: 'hidden', background: '#2b2b2b' }} >\r\n      <TableContainer style={{ height: 440 }} >\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow style={{ background: '#2b2b2b' }}>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth, background: '#2b2b2b', color: '#faa21a', fontSize: '16px' }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.date} style={{ color: 'white' }}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align} style={{ color: 'white' }}>\r\n                          {column.format && typeof value === 'number'\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n        style={{ color: '#faa21a', display: rows.length > rowsPerPage ? 'block' : 'none' }}\r\n      />\r\n    </Paper >\r\n  );\r\n}\r\n\r\nexport default NodesList;","import React, { useEffect, useState } from 'react'\r\n// import { useSelector } from 'react-redux'\r\nimport styled from 'styled-components'\r\n// import { ethers } from 'ethers';\r\nimport { Card, CardBody, Heading } from 'uikit'\r\n// import CardValue from 'components/CardValue'\r\n// import useActiveWeb3React from 'hooks/useActiveWeb3React'\r\n// import { BSCProvider, simpleRpcProvider } from 'utils/provider'\r\n// import { State } from '../../../state/types';\r\nimport NodesList from './NodesList';\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 376px;\r\n`\r\n\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\nconst NodesListCard = (account) => {\r\n  const [nodeNum, setNodeNum] = useState(0);\r\n\r\n  return (\r\n    <StyledCard>\r\n      <StyledCardBody>\r\n        <div>\r\n          <Heading scale=\"lg\" mb=\"4px\">\r\n            Nodes\r\n          </Heading>\r\n          <Label>Currently {nodeNum}/100</Label>\r\n        </div>\r\n        <div>\r\n          <NodesList account={account} />\r\n        </div>\r\n      </StyledCardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default NodesListCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { Duration, format, fromUnixTime } from 'date-fns'\r\nimport { UnsupportedChainIdError, useWeb3React, Web3ReactProvider } from '@web3-react/core'\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\nimport { Card, CardBody, Text, Heading } from 'uikit'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport CardValue from 'components/CardValue'\r\n// import { useFsvBalance, useFsvBNBBalance, useEthBalance, useBNBBalance } from 'state/user/hooks'\r\n// import { useTokenPriceData } from 'hooks/useInfo'\r\nimport contracts from 'config/contracts'\r\n// import { formatAmount } from 'utils/formatInforNumbers'\r\n// import CardBusdValue from 'components/CardBusdValue'\r\nimport { State } from '../../../state/types'\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 200px;\r\n`\r\n\r\nconst RowBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RowBlockBetween = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst Label = styled.div<{labelSize: string}>`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: ${props => props.labelSize};\r\n  margin-bottom: 24px;\r\n  margin-top: 24px;\r\n`\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\nconst StyledCardBody = styled(CardBody)`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst StyledButton = styled.button`\r\n  align-items: center;\r\n  border: 0;\r\n  border-radius: 12px;\r\n  padding: 12px;\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  width: 80%;\r\n  font-family: inherit;\r\n  font-size: 16px;\r\n  // font-weight: 600;\r\n  justify-content: center;\r\n  letter-spacing: 0.03em;\r\n  background-color: #3a3a3c;\r\n  color: #faa21a;\r\n  // line-height: 1;\r\n  // outline: 0;\r\n  transition: background-color 0.2s, opacity 0.2s;\r\n\r\n  &:hover {\r\n    opacity: 0.65;\r\n  }\r\n\r\n  &:active {\r\n    opacity: 0.85;\r\n    transform: translateY(1px);\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\n\r\nconst AvailReward = (account) => {\r\n\r\n  const [availReward, setRewardAvailable] = useState(0);\r\n  \r\n  return (\r\n    <StyledCard>\r\n      <StyledCardBody>\r\n        <Heading scale=\"sm\">\r\n          Available Rewards\r\n        </Heading>\r\n        <Label labelSize='42px'>{availReward} SMN</Label>\r\n        <StyledButton>Claim Rewards</StyledButton>\r\n      </StyledCardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default AvailReward\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport axios from 'axios'\r\nimport { Card, CardBody, Heading } from 'uikit'\r\nimport { ethers } from 'ethers';\r\n\r\n// import Web3 from 'web3';\r\n\r\n\r\nimport tempABI from '../../../contracts/smartnodes.json';\r\n\r\nconst contractABI = tempABI.abi;\r\nconst contractAddress = '0xa5CD786fDA5802BeD0138E3e591eEB52712DD9Ee';\r\n\r\nconst StyledCard = styled(Card)`\r\n  min-height: 200px;\r\n`\r\n\r\nconst RowBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst RowBlockBetween = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledInput = styled.input`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n  margin-bottom: 22px;\r\n  margin-top: 24px;\r\n  padding: 8px;\r\n  border-radius: 12px;\r\n  background: #3a3a3c;\r\n  text-align: center;\r\n  width: 80%;\r\n  border: 0px;\r\n  :focus{\r\n    border: 0px;\r\n    outline: 0;\r\n  }\r\n`\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`\r\nconst StyledCardBody = styled(CardBody)`\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`\r\n\r\nconst StyledButton = styled.button`\r\n  align-items: center;\r\n  border: 0;\r\n  border-radius: 12px;\r\n  padding: 12px;\r\n  cursor: pointer;\r\n  display: inline-flex;\r\n  width: 80%;\r\n  font-family: inherit;\r\n  font-size: 16px;\r\n  // font-weight: 600;\r\n  justify-content: center;\r\n  letter-spacing: 0.03em;\r\n  background-color: #3a3a3c;\r\n  color: #faa21a;\r\n  // line-height: 1;\r\n  // outline: 0;\r\n  transition: background-color 0.2s, opacity 0.2s;\r\n\r\n  &:hover {\r\n    opacity: 0.65;\r\n  }\r\n\r\n  &:active {\r\n    opacity: 0.85;\r\n    transform: translateY(1px);\r\n    box-shadow: none;\r\n  }\r\n`;\r\n\r\n\r\nconst CreateNewNode = (myAccount) => {\r\n  const [nodeName, setNodeName] = useState('');\r\n  const createNewNodeFunc = async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if (ethereum) {\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        const signer = provider.getSigner();\r\n        const contract = new ethers.Contract(contractAddress, contractABI, signer);\r\n\r\n        console.log(myAccount, nodeName);\r\n        const newNode = await contract.createNode(myAccount, nodeName, 1, true);\r\n\r\n        // await contract.on(\"NodeCreated\", (amount, account, blockTime) => {\r\n        //   console.log(\"Node Successfully created\", amount, account, blockTime);\r\n        // });\r\n\r\n        // const web3 = new Web3(window.ethereum);\r\n        // // await window.ethereum.enable();\r\n        // const NameContract = new web3.eth.Contract(contractABI, contractAddress);\r\n        // NameContract.createNode(account, '123', 10, true).send();\r\n      }\r\n      else {\r\n        console.log(\"Connection Error\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  const inputHandleChange = (e) => {\r\n    setNodeName(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <StyledCard>\r\n      <StyledCardBody>\r\n        <Heading scale=\"sm\">\r\n          Create New Node\r\n        </Heading>\r\n        <StyledInput placeholder='node name' id='nodeNameInput'onChange={inputHandleChange} />\r\n        <StyledButton onClick={createNewNodeFunc}>Create New Node</StyledButton>\r\n      </StyledCardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default CreateNewNode\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text, BaseLayout } from 'toolkit/uikit'\r\nimport Page from 'components/Layout/Page'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport TotalClaimedSMN from './components/TotalClaimedSMN'\r\nimport TotalNodes from './components/TotalNodes'\r\nimport SMNprice from './components/SMNprice'\r\nimport AutoCompound from './components/AutoCompound'\r\nimport IncomeCard from './components/IncomeCard'\r\nimport PriceChart from './components/PriceChart'\r\nimport NodesListCard from './components/NodesListCard'\r\nimport AvailReward from './components/AvailReward'\r\nimport CreateNewNode from './components/CreateNewNode'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: stretch;\r\n  justify-content: stretch;\r\n  margin-bottom: 24px;\r\n  grid-gap: 24px;\r\n  width: 100%;\r\n\r\n  & > div {\r\n    grid-column: span 12;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    margin-bottom: 32px;\r\n    grid-gap: 32px;\r\n\r\n    & > div {\r\n      grid-column: span 3;\r\n    }\r\n  }\r\n`\r\nconst CustomCards = styled(Cards)`\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst BigCards = styled(Cards)`\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\nconst Home: React.FC = () => {\r\n  const { account } = useWeb3React();\r\n  // console.warn = () => { };\r\n\r\n  return (\r\n    <>\r\n      <Page>\r\n        <Cards>\r\n          <SMNprice title=\"$SMN\" val1=\"$0\" val2={0} img='images/status1.jpg' />\r\n          <TotalNodes title=\"Total Smart Nodes\" val1=\"6500\" val2={-5} img='images/status2.jpg' />\r\n          <TotalClaimedSMN title=\"Your Total Claimed $SMN\" val1=\"3587\" val2={null} img='images/status3.jpg' account={account} />\r\n          <AutoCompound title=\"Auto Compound\" status={false} img1='images/status4.jpg' img2='images/status42.jpg' />\r\n        </Cards>\r\n        <BigCards>\r\n          <IncomeCard img='images/income.jpg' />\r\n          <CustomCards>\r\n            <AvailReward account={account} />\r\n            <CreateNewNode myAccount={account} />\r\n          </CustomCards>\r\n        </BigCards>\r\n        <BigCards>\r\n          <NodesListCard account={account} />\r\n          <PriceChart />\r\n        </BigCards>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n"],"sourceRoot":""}